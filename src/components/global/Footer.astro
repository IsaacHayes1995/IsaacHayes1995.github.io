---
// Fundations
import Text from "@/components/fundations/elements/Text.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
const navigationItems = [
  {
    title: "Resources",
    items: [
      {
        href: "https://buy.polar.sh/polar_cl_h4SVO4HG1wvJnmHFs-ErrZyrEGs7xdI2Z4UrEaB58-Y",
        text: "Buy ProFolioX",
      },
      {
        href: "https://lexingtonthemes.com/legal/license/",
        text: "License",
      },
      {
        href: "https://lexingtonthemes.com/documentation",
        text: "Documentation",
      },
    ],
  },
  {
    title: "Connect",
    items: [
      { href: "#_", text: "GitHub" },
      { href: "#_", text: "Twitter" },
      { href: "#_", text: "Instagram" },
      { href: "#_", text: "Linked In" },
    ],
  },
  {
    title: "Navigation",
    items: [
      {
        href: "/system/overview",
        text: "Overview",
      },
      {
        href: "/system/links",
        text: "Links",
      },
      {
        href: "/system/buttons",
        text: "Buttons",
      },
      {
        href: "/system/colors",
        text: "Colors",
      },
      {
        href: "/system/typography",
        text: "Typography",
      },
    ],
  },
];
---

<footer>
  <Wrapper variant="standard" class="py-8">
    <div class="relative before:absolute after:absolute before:bg-black after:bg-base-200 dark:before:bg-neutral-50 dark:after:bg-neutral-50/10 before:top-0 before:left-0 before:h-px before:w-18 after:top-0 after:right-0 after:left-20 after:h-px">
      <div class="grid grid-cols-2 md:grid-cols-3  pt-2">
        {
          navigationItems.map((section) => (
            <div class="flex flex-col gap-1 ">
              <Text
                tag="h3"
                variant="textSM"
                class=" font-medium uppercase text-base-900 dark:text-white"
              >
                {section.title}
              </Text>
              <div class="mt-2 flex flex-col gap-1">
                {section.items.map((item) => (
                  <a
                    href={item.href}
                    class=" hover:translate-x-1.5   text-sm text-base-500 hover:text-accent-500 dark:hover:text-accent-300 dark:text-base-50 duration-500"
                  >
                    {item.text}
                  </a>
                ))}
              </div>
            </div>
          ))
        }
      </div>
      <div
        class="mt-12 grid grid-cols-1 lg:grid-cols-2 gap-4 pb-12 pt-2 relative before:absolute after:absolute before:bg-black after:bg-base-200 dark:before:bg-neutral-50 dark:after:bg-neutral-50/10 before:top-0 before:left-0 before:h-px before:w-18 after:top-0 after:right-0 after:left-20 after:h-px"
      >
      <div class="flex flex-col gap-1">
          <Text
            tag="h3"
            variant="textSM"
            class="font-medium uppercase text-base-900 dark:text-white"
          >
            Let's chat
          </Text>
          <a
            href="#_"
            class="hover:translate-x-1.5 text-sm text-base-500 hover:text-accent-500 dark:hover:text-accent-300 dark:text-base-50 duration-500"
          >
            alex(at)profoliox.com
          </a>
          <a
            href="#_"
            class="hover:translate-x-1.5 text-sm text-base-500 hover:text-accent-500 dark:hover:text-accent-300 dark:text-base-50 duration-500"
          >
            ++11 2222 3333 4444
          </a>
        </div>
        <div class="text-right ">
          <Text
            tag="p"
            variant="display3XL"
            class="text-base-500 dark:textbase-400 lg:ml-auto"
          >
            <span id="clock"> </span>
            
          </Text>
          <Text tag="span" variant="textSM" class="text-base-500  dark:textbase-400 mt-1">
            Helsinki, Finland
          </Text>
        </div>
      </div>
      <div class="relative before:absolute after:absolute before:bg-black after:bg-base-200 dark:before:bg-neutral-50 dark:after:bg-neutral-50/10 before:top-0 before:left-0 before:h-px before:w-18 after:top-0 after:right-0 after:left-20 after:h-px">
        <Text
          tag="p"
          variant="textSM"
          class="text-base-500 dark:textbase-400 pt-2"
        >
          © Copyright Lexington Themes <span id="year"></span>. All rights
          reserved. Designed and built in the Åland Islands by Michael Andreuzza.
        </Text>
      </div>
    </div>
  </Wrapper>
</footer>
<script type="module">
  function updateClock() {
    // Create a new Date object based on Helsinki's timezone
    const now = new Date().toLocaleString("en-US", { timeZone: "Europe/Helsinki" });

    // Convert the time string to a Date object
    const dateObj = new Date(now);

    let hours = dateObj.getHours(); // 0-23
    const minutes = dateObj.getMinutes(); // 0-59
    // Show seconds if you want to remove the comment from here
    // const seconds = dateObj.getSeconds(); // 0-59
    const period = hours >= 12 ? "PM" : "AM"; // Determine if it's AM or PM

    // Convert hours to 12-hour format
    hours = hours % 12;
    hours = hours ? hours : 12; // Handle the case for 12 AM and 12 PM

    // Format time as HH:MM:SS AM/PM
    const timeString =
      [
        hours.toString().padStart(2, "0"),
        minutes.toString().padStart(2, "0"),
        // Show seconds if you want to remove the comment from here
        // seconds.toString().padStart(2, "0"),
      ].join(":") +
      " " +
      period;

    // Update the clock element with the time
    document.getElementById("clock").textContent = timeString;
  }

  // Update the year every second
  function updateYear() {
    const currentYear = new Date().getFullYear(); // Get the current year
    document.getElementById("year").textContent = currentYear; // Update the year in the span
  }

  // Update the clock every second
  setInterval(updateClock, 1000);

  // Initialize the clock and year
  updateClock();
  updateYear();
</script>
